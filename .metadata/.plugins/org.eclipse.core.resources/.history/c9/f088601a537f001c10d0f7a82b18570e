package com.mouritech.hibernateex.entity;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.Email;
import javax.validation.constraints.Pattern;
import javax.validation.constraints.Size;


@Entity
@Table(name = "customer_info")
public class Customer {
	
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "customerid")
	private Long cusId;
	
	@Column(name = "customername")
	@Size(min=3)
	private String cusName;
	
	@Column(name = "customeremail")
	@Email
	private String cusAge;
	@Column(name = "customerage")
	@Email
	private String cusEmail;
	
	public Customer(@Email String cusAge) {
		super();
		this.cusAge = cusAge;
	}

	@Column(name = "customeremobno")
	@Pattern(regexp = "[0-9]", message="mobile number contains only digits")
	private String cusMobileNo;
	
	public Customer() {
		
	}

	

	@Override
	public String toString() {
		return "Customer [cusId=" + cusId + ", cusName=" + cusName + ", cusAge=" + cusAge + ", cusEmail=" + cusEmail
				+ ", cusMobileNo=" + cusMobileNo + "]";
	}



	public Customer(Long cusId) {
		super();
		this.cusId = cusId;
	}



	public Long getCusId() {
		return cusId;
	}

	public void setCusId(Long cusId) {
		this.cusId = cusId;
	}

	public String getCusName() {
		return cusName;
	}

	public void setCusName(String cusName) {
		this.cusName = cusName;
	}

	public String getCusEmail() {
		return cusEmail;
	}

	public void setCusEmail(String cusEmail) {
		this.cusEmail = cusEmail;
	}

	public String getCusMobileNo() {
		return cusMobileNo;
	}

	public void setCusMobileNo(String cusMobileNo) {
		this.cusMobileNo = cusMobileNo;
	}

	public String getCusAge() {
		return cusAge;
	}

	public void setCusAge(String cusAge) {
		this.cusAge = cusAge;
	}

	public Customer(Long cusId, @Size(min = 3) String cusName, @Email String cusAge, @Email String cusEmail,
			@Pattern(regexp = "[0-9]", message = "mobile number contains only digits") String cusMobileNo) {
		super();
		this.cusId = cusId;
		this.cusName = cusName;
		this.cusAge = cusAge;
		this.cusEmail = cusEmail;
		this.cusMobileNo = cusMobileNo;
	}

	

	

}
